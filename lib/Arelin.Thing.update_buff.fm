// Update a stt_key until the value associated to it ends. Used along with will_set_buff
// - self: thing with stt (usually character)
// - stt_key: the key in the stt map
Arelin.Thing.update_buff(self: Arelin.Thing, stt_key: Bits): Arelin.Thing
  let stt = Arelin.Thing.get_stt(self)
  let get_stt = Map.get<>(stt_key, stt)
  case get_stt:
  | #none# self;
  | #some#
    case F64.eql(get_stt.value, F64.0):
    | let new_tik = F64.sub(get_stt.value, F64.1)
      let new_stt = Map.set<>(stt_key, new_tik, stt)
      Arelin.Thing.set_stt(self, new_stt);
    | self;;