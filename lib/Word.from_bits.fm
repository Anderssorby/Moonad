Word.from_bits(size: Nat, bits: Bits): Word(size)
  size<(size) Word(size)>
  | Word.nil;
  | (size.pred)
    bits<() Word(Nat.succ(size.pred))>
    | Word.0<size.pred>(Word.from_bits(size.pred)(Bits.nil));
    | (bits.pred) Word.0<size.pred>(Word.from_bits(size.pred)(bits.pred));
    | (bits.pred) Word.1<size.pred>(Word.from_bits(size.pred)(bits.pred));;


// Word.from_bits(size: Nat, bits: Bits): Word(size)
//   case size:
//   | Word.nil;
//   | case bits:
//     | Word.0<size.pred>(Word.from_bits(size.pred, Bits.nil));
//     | Word.0<size.pred>(Word.from_bits(size.pred, bits.pred));
//     | Word.1<size.pred>(Word.from_bits(size.pred, bits.pred));;