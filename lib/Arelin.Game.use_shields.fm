Arelin.Game.use_shields(
  buff : Arelin.Game.Buff,
  acc  : Pair(F64, List(Arelin.Game.Buff))
  ) : Pair(F64, List(Arelin.Game.Buff))
  let curr_dmg = Pair.fst<><>(acc)
  let curr_buf = Pair.snd<><>(acc)
  case buff:
  | #shielded#
    case F64.eql(curr_dmg, F64.0):
    | acc;
    | case F64.compare_numbers(curr_dmg, buff.val):
      | #LT# 
        let remaining_shield = F64.sub(buff.val, curr_dmg)
        let remaining_buf    = 
          List.cons<>
          | Arelin.Game.Buff.shielded(buff.dur, remaining_shield);
          | curr_buf;
        Pair.new<><>(F64.0, remaining_buf);
      | #EQ# Pair.new<><>(F64.0, curr_buf);
      | #GT#
        let remaining_dmg = F64.sub(curr_dmg, buff.val)
        Pair.new<><>(remaining_dmg, curr_buf);
    ;
  ;
  | #slowed#   Pair.new<><>(curr_dmg, List.cons<>(buff, curr_buf)); 
  | #hasted#   Pair.new<><>(curr_dmg, List.cons<>(buff, curr_buf));
  | #silenced# Pair.new<><>(curr_dmg, List.cons<>(buff, curr_buf));
  | #rooted#   Pair.new<><>(curr_dmg, List.cons<>(buff, curr_buf));
  | #stunned#  Pair.new<><>(curr_dmg, List.cons<>(buff, curr_buf));