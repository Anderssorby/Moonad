Arelin.exec_command(cmd: Arelin.Game.Command, gm: Arelin.Game): Arelin.Game
  case cmd:
  | #cmd.pid, cmd.inp#
    let fn = ((this)
      let silenced = Arelin.Thing.is_silenced(this)
      let stunned  = Arelin.Thing.is_stunned(this)
      case stunned:
      | #true# 
        case cmd.inp:
        | #sdir# Arelin.Thing.init_act(this, F64.0, cmd.inp.dir); 
        | #key0# this; 
        | #key1# this; 
        | #key2# this; 
        | #key3# this; 
        | #key4# this; 
        | #key5# this; 
        | #cmsg# this;
      ;
      | #false#
        case silenced:
        | #true#
          case cmd.inp:
          | #sdir# Arelin.Thing.set_pad(this, cmd.inp.dir); 
          | #key0# this; 
          | #key1# this; 
          | #key2# this; 
          | #key3# this; 
          | #key4# this; 
          | #key5# this; 
          | #cmsg# this;
        ;          
        | #false#
          case cmd.inp:
          | #sdir# Arelin.Thing.set_pad(this, cmd.inp.dir); 
          | #key0# Arelin.Thing.init_act(this,          F64.1, cmd.inp.pos); 
          | #key1# Arelin.Thing.init_act(this, F64.parse("2"), cmd.inp.pos); 
          | #key2# Arelin.Thing.init_act(this, F64.parse("3"), cmd.inp.pos); 
          | #key3# Arelin.Thing.init_act(this, F64.parse("4"), cmd.inp.pos); 
          | #key4# Arelin.Thing.init_act(this, F64.parse("5"), cmd.inp.pos); 
          | #key5# Arelin.Thing.init_act(this, F64.parse("6"), cmd.inp.pos); 
          | #cmsg# this;
        ;
      ;
    ) :: Arelin.Game.TxFunction 
    Arelin.Game.with_thing(cmd.pid, fn, gm);